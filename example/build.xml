<?xml version="1.0" encoding="UTF-8"?>
<project name="example" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.git/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.class"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>

    <property name="project.jdk.home" value="${jdk.home.1.7}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>


    <!-- Project Libraries -->

    <path id="library.ice.classpath">
        <pathelement location="${basedir}/tools/Ice-3_5_0/lib/Ice.jar"/>
    </path>

    <path id="library.jmock_2_6_0_2.classpath">
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/bsh-core-2.0b4.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/cglib-nodep-2.2.3.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-core-1.3-javadoc.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-core-1.3-sources.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-core-1.3.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-library-1.3-javadoc.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-library-1.3-sources.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-library-1.3.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-unit-test-1.3-sources.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/hamcrest-unit-test-1.3.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/jmock-2.6.0.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/jmock-junit3-2.6.0.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/jmock-junit4-2.6.0.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/jmock-legacy-2.6.0.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/jmock-script-2.6.0.jar"/>
        <pathelement location="${basedir}/tools/jmock_2_6_0_2/objenesis-1.0.jar"/>
    </path>

    <path id="library.joda-time-2.2.classpath">
        <pathelement location="${basedir}/tools/joda-time-2.2/joda-time-2.2-javadoc.jar"/>
        <pathelement location="${basedir}/tools/joda-time-2.2/joda-time-2.2-sources.jar"/>
        <pathelement location="${basedir}/tools/joda-time-2.2/joda-time-2.2.jar"/>
    </path>

    <path id="library.junit_4_11.classpath">
        <pathelement location="${basedir}/tools/junit_4_11/hamcrest-core-1.3.jar"/>
        <pathelement location="${basedir}/tools/junit_4_11/junit-4.11.jar"/>
    </path>

    <path id="library.lib.classpath">
        <pathelement location="${basedir}/tools/hsqldb_2_3_0/lib/hsqldb.jar"/>
        <pathelement location="${basedir}/tools/hsqldb_2_3_0/lib/servlet-2_3-fcs-classfiles.zip"/>
        <pathelement location="${basedir}/tools/hsqldb_2_3_0/lib/sqltool.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module example -->

    <dirname property="module.example.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.example" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.example" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.example" value="${project.jdk.classpath}"/>

    <property name="compiler.args.example" value="${compiler.args}"/>

    <property name="example.output.dir" value="${module.example.basedir}/out/production"/>
    <property name="example.testoutput.dir" value="${module.example.basedir}/out/test"/>

    <path id="example.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="example.module.production.classpath">
        <path refid="library.joda-time-2.2.classpath"/>
        <path refid="library.junit_4_11.classpath"/>
        <path refid="library.jmock_2_6_0_2.classpath"/>
        <path refid="library.lib.classpath"/>
        <path refid="library.ice.classpath"/>
    </path>

    <path id="example.runtime.production.module.classpath">
        <pathelement location="${example.output.dir}"/>
        <path refid="library.joda-time-2.2.classpath"/>
        <path refid="library.junit_4_11.classpath"/>
        <path refid="library.jmock_2_6_0_2.classpath"/>
        <path refid="library.lib.classpath"/>
        <path refid="library.ice.classpath"/>
    </path>

    <path id="example.module.classpath">
        <pathelement location="${example.output.dir}"/>
        <path refid="library.joda-time-2.2.classpath"/>
        <path refid="library.junit_4_11.classpath"/>
        <path refid="library.jmock_2_6_0_2.classpath"/>
        <path refid="library.lib.classpath"/>
        <path refid="library.ice.classpath"/>
    </path>

    <path id="example.runtime.module.classpath">
        <pathelement location="${example.testoutput.dir}"/>
        <pathelement location="${example.output.dir}"/>
        <path refid="library.joda-time-2.2.classpath"/>
        <path refid="library.junit_4_11.classpath"/>
        <path refid="library.jmock_2_6_0_2.classpath"/>
        <path refid="library.lib.classpath"/>
        <path refid="library.ice.classpath"/>
    </path>


    <patternset id="excluded.from.module.example">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.example">
        <patternset refid="excluded.from.module.example"/>
    </patternset>

    <path id="example.module.sourcepath">
        <dirset dir="${module.example.basedir}">
            <include name="src/java"/>
            <include name="src/generated"/>
        </dirset>
    </path>

    <path id="example.module.test.sourcepath">
        <dirset dir="${module.example.basedir}">
            <include name="test/java"/>
        </dirset>
    </path>


    <target name="compile.module.example" depends="compile.module.example.production,compile.module.example.tests"
            description="Compile module example"/>

    <target name="compile.module.example.production" description="Compile module example; production classes">
        <mkdir dir="${example.output.dir}"/>
        <javac destdir="${example.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.example}/javac"
               includeantruntime="false">
            <compilerarg line="${compiler.args.example}"/>
            <bootclasspath refid="example.module.bootclasspath"/>
            <classpath refid="example.module.production.classpath"/>
            <src refid="example.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.example"/>
        </javac>

        <copy todir="${example.output.dir}">
            <fileset dir="${module.example.basedir}/src/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.example.basedir}/src/generated">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.example.tests" depends="compile.module.example.production"
            description="compile module example; test classes" unless="skip.tests">
        <mkdir dir="${example.testoutput.dir}"/>
        <javac destdir="${example.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.example}/javac"
               includeantruntime="false">
            <compilerarg line="${compiler.args.example}"/>
            <bootclasspath refid="example.module.bootclasspath"/>
            <classpath refid="example.module.classpath"/>
            <src refid="example.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.example"/>
        </javac>

        <copy todir="${example.testoutput.dir}">
            <fileset dir="${module.example.basedir}/test/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.example" description="cleanup module">
        <delete dir="out/"/>
    </target>

    <target name="compile.ice.middleware">
        <mkdir dir="src/generated"/>
        <exec executable="${module.example.basedir}/slice2java.sh">
            <arg value="--meta"/>
            <arg value="java:package:com.asprotunity.exchange"/>
            <arg value="--output-dir"/>
            <arg value="src/generated"/>
            <arg value="src/Ice/middleware.ice"/>
        </exec>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.example" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.example" description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>
</project>