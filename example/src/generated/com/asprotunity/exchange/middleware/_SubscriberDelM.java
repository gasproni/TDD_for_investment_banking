// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.0
//
// <auto-generated>
//
// Generated from file `middleware.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.asprotunity.exchange.middleware;

public final class _SubscriberDelM extends Ice._ObjectDelM implements _SubscriberDel {
    public void
    notifyEvent(Event ev, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __observer)
            throws IceInternal.LocalExceptionWrapper {
        IceInternal.Outgoing __og = __handler.getOutgoing("notifyEvent", Ice.OperationMode.Normal, __ctx, __observer);
        try {
            try {
                IceInternal.BasicStream __os = __og.startWriteParams(Ice.FormatType.DefaultFormat);
                ev.__write(__os);
                __og.endWriteParams();
            } catch (Ice.LocalException __ex) {
                __og.abort(__ex);
            }
            boolean __ok = __og.invoke();
            if (__og.hasResponse()) {
                try {
                    if (!__ok) {
                        try {
                            __og.throwUserException();
                        } catch (Ice.UserException __ex) {
                            throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                        }
                    }
                    __og.readEmptyParams();
                } catch (Ice.LocalException __ex) {
                    throw new IceInternal.LocalExceptionWrapper(__ex, false);
                }
            }
        } finally {
            __handler.reclaimOutgoing(__og);
        }
    }
}
